
# Change all vars and remove all comments before going to production!

# The hostname or IP address on which your server will run.
# * Typically, this is 'localhost' for local development.
# * For production, this should be the public IP address or domain name of your server.
HOST=localhost

# The port number on which your server will run.
# * Typically, this is 3000 for local development, but you might need to change it for production.
# *** Port 3001 for the backend when you have a frontend on port 3000. *** (not important)
PORT=3001

# Allowed origins for CORS (Cross-Origin Resource Sharing).
# This should be a comma-separated list of origins allowed to access your resources.
# * For local development, you might use 'localhost'.
# * For production, list all the domains that need access (e.g., 'example.com,api.example.com').
# For example, we use this host: https://lumens-pindie.nomoredomainswork.ru
CORS=localhost,https://lumens-pindie.nomoredomainswork.ru

# Connection string for your MongoDB instance.
# * For local development, this is usually something like 'mongodb://HOST:PORT/YOUR_DB_NAME'.
#     — In most cases, host is: 'localhost' and the port is: '27017' (without quotes).
# * For production, use your MongoDB Atlas URI or other remote MongoDB service.
MONGODB_CONN=mongodb://localhost:27017/pindie

# Secret key for your application.
# This key is used for signing and verifying tokens (e.g., JWT).
# * For local development, you can use a simple key like 'insecure_secret_key'.
# * For production, generate a strong, unique secret key.
# You can generate a secure key using a command like `openssl rand -base64 32`.
SECRET_KEY=insecure_secret_key

# JWT expiration time.
# This sets how long a JWT token remains valid.
# Typical formats include (without quotes):
#     — '1d' (1 day), '12h' (12 hours), '30m' (30 minutes), '45s' (45 seconds), '15ms' (15 milliseconds).
# Adjust the value based on your application's security requirements.
JWT_EXPIRES_IN=1d
